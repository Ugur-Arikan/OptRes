<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Res.Match&lt;TOut&gt;(Func&lt;TOut&gt;, Func&lt;String, TOut&gt;) Method</title><meta name="Title" content="Match&lt;TOut&gt;(Func&lt;TOut&gt;, Func&lt;String, TOut&gt;)" /><meta name="Help.Id" content="M:OptRes.Res.Match``1(System.Func{``0},System.Func{System.String,``0})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="OptRes" /><meta name="guid" content="b4031615-eea9-0a92-f674-d09aa7b05a1a" /><meta name="Description" content="Maps into () lazily whenever IsOk; and into (errorMessage) otherwise. Similar to except that whenOk is lazy and evaluated only when IsOk." /><meta name="tocFile" content="../toc/IDFCDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">OptRes: Auto-generated by Sandcastle</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Res<span id="LSTA6AD95A4_0" data-languageSpecificText="cpp=::|nu=."></span>Match<span id="LSTA6AD95A4_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TOut</span><span id="LSTA6AD95A4_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(Func<span id="LSTA6AD95A4_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TOut</span><span id="LSTA6AD95A4_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LSTA6AD95A4_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>String, <span class="typeparameter">TOut</span><span id="LSTA6AD95A4_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1><div class="summary">
            Maps into <span class="parameter">whenOk</span>() lazily whenever IsOk; and into <span class="parameter">whenErr</span>(errorMessage) otherwise.
            Similar to <a href="b3aef9fd-c612-66fb-aeec-a20ea5f76579.htm">Match<span id="LSTA6AD95A4_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TOut<span id="LSTA6AD95A4_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TOut, Func<span id="LSTA6AD95A4_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String, TOut<span id="LSTA6AD95A4_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> except that whenOk is lazy and evaluated only when IsOk.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="9dbb6989-bdfb-5c0a-a52e-0d0ce2d4e01a.htm">OptRes</a><br /><strong>Assembly:</strong> OptRes (in OptRes.dll) Version: 6.1.2<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> TOut <span class="identifier">Match</span>&lt;TOut&gt;(
	<span class="identifier">Func</span>&lt;TOut&gt; <span class="parameter">whenOk</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">string</span>, TOut&gt; <span class="parameter">whenErr</span>
)
</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">whenOk</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-1" target="_blank" rel="noopener noreferrer">Func</a><span id="LSTA6AD95A4_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TOut</span></span><span id="LSTA6AD95A4_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function (() -&gt; TOut) to be called lazily to get the return value when IsOk.</dd><dt class="has-text-weight-normal"><span class="parameter">whenErr</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LSTA6AD95A4_13" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>, <span class="selflink"><span class="typeparameter">TOut</span></span><span id="LSTA6AD95A4_14" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Map function (string -&gt; TOut) to be called to get the return value when IsErr.</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TOut</span></dt><dd /></dl><h4 class="quickLinkHeader">Return Value</h4><span class="selflink"><span class="typeparameter">TOut</span></span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="ec9a78db-786a-c07e-f7ea-2ecca9863f58.htm">Res Structure</a></div><div><a href="c2ffdac3-7d4d-2384-2220-57ef98821e17.htm">Match Overload</a></div><div><a href="9dbb6989-bdfb-5c0a-a52e-0d0ce2d4e01a.htm">OptRes Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>