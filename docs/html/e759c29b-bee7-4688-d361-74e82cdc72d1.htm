<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Extensions.TrySet Method</title><meta name="Title" content="TrySet" /><meta name="Help.Id" content="Overload:OptRes.Extensions.TrySet" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="OptRes" /><meta name="guid" content="e759c29b-bee7-4688-d361-74e82cdc72d1" /><meta name="tocFile" content="../toc/IDABA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">OptRes: Auto-generated by Sandcastle</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Extensions<span id="LST5D436347_0" data-languageSpecificText="cpp=::|nu=."></span>Try<wbr />Set Method</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Overload List</h2><div id="IDACASection"><table id="OverloadList" class="table is-hoverable"><tr><td><a href="1c669eba-c011-ac2c-585f-319d7daedf04.htm">TrySet<span id="LST5D436347_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IList<span id="LST5D436347_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, T)</a></td><td>
    
            Tries to set the <span class="parameter">index</span>-th element of the collection with the given <span class="parameter">value</span>;
            returns Ok() if the <span class="parameter">index</span> is valid; the Err otherwise.
            
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">Span&lt;int&gt; collection = new[] { 0, 1, 2 };
ReadOnlySpan&lt;int&gt; collection = new[] { 0, 1, 2 };
Memory&lt;int&gt; collection = new[] { 0, 1, 2 };
ReadOnlyMemory&lt;int&gt; collection = new[] { 0, 1, 2 };
int[] collection = new[] { 0, 1, 2 };
List&lt;int&gt; collection = new() { 0, 1, 2 };
IList&lt;int&gt; collection = new List&lt;int&gt;() { 0, 1, 2 };
IEnumerable&lt;int&gt; collection = new int[] { 0, 1, 2 };

Assert(collection.GetOrNone(1) == Some(1));

Res res = collection.TrySet(1, 42);
Assert(res.IsOk);
Assert(collection.GetOrNone(1) == Some(42));

Assert(collection.TrySet(-1, 42).IsErr);
Assert(collection.TrySet(2, 42).IsErr);</code></pre></div></div></td></tr><tr><td><a href="fc4715da-8674-68db-6b8e-08fcd77631d3.htm">TrySet<span id="LST5D436347_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5D436347_7" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST5D436347_8" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, T)</a></td><td>
            Tries to set the <span class="parameter">index</span>-th element of the collection with the given <span class="parameter">value</span>;
            returns Ok() if the <span class="parameter">index</span> is valid; the Err otherwise.
            
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">Span&lt;int&gt; collection = new[] { 0, 1, 2 };
ReadOnlySpan&lt;int&gt; collection = new[] { 0, 1, 2 };
Memory&lt;int&gt; collection = new[] { 0, 1, 2 };
ReadOnlyMemory&lt;int&gt; collection = new[] { 0, 1, 2 };
int[] collection = new[] { 0, 1, 2 };
List&lt;int&gt; collection = new() { 0, 1, 2 };
IList&lt;int&gt; collection = new List&lt;int&gt;() { 0, 1, 2 };
IEnumerable&lt;int&gt; collection = new int[] { 0, 1, 2 };

Assert(collection.GetOrNone(1) == Some(1));

Res res = collection.TrySet(1, 42);
Assert(res.IsOk);
Assert(collection.GetOrNone(1) == Some(42));

Assert(collection.TrySet(-1, 42).IsErr);
Assert(collection.TrySet(2, 42).IsErr);</code></pre></div></div></td></tr><tr><td><a href="1695dac7-1f9c-f1e7-9695-2c35dab1a788.htm">TrySet<span id="LST5D436347_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(List<span id="LST5D436347_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST5D436347_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span>, Void, T)</a></td><td> </td></tr><tr><td><a href="edd811c2-c44c-1c19-e771-38b3bd1a35df.htm">TrySet<span id="LST5D436347_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Memory, Void, T)</a></td><td> </td></tr><tr><td><a href="75f0fc39-0f49-0ce8-297c-d630e68e9dbf.htm">TrySet<span id="LST5D436347_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5D436347_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Span, Void, T)</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="f5ae1118-1356-c86e-23dd-17e87ba8f1f6.htm">Extensions Class</a></div><div><a href="9dbb6989-bdfb-5c0a-a52e-0d0ce2d4e01a.htm">OptRes Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Overload List</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>